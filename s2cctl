#! /bin/sh

# WARNING: This will only work on Programmers Dvorak (Polish Alternative)

logfile="$HOME/.Space2Ctrl.log"

start() {
	# Misc other remappings
	xmodmap "${0%/*}/Xmodmap"

	# Map Caps_Lock to Escape
	xmodmap -e "remove Lock = Caps_Lock"
	xmodmap -e "keysym Caps_Lock = Escape"
	xmodmap -e "add Lock = Caps_Lock"

	# For remapping the "-" key to ctrl
	xmodmap -e "keycode 48 = Control_L NoSymbol Control_L NoSymbol NoSymbol NoSymbol NoSymbol NoSymbol"
	xmodmap -e "keycode 255 = minus underscore minus underscore hyphen endash hyphen endash"

	# For remapping the caps lock key to ctrl
	origmap=$(xmodmap -pke | grep -E "^keycode[[:blank:]]*?66")
	newmap=$(echo ${origmap} | perl -pe "s/ Escape/ Control_L/g")
	xmodmap -e "$newmap"
	xmodmap -e "keycode 254 = Escape NoSymbol Escape"

	nohup "${0%/*}/s2c" >> "$logfile" 2>&1 &
	sleep 1 # Don't ask me why but we need to wait more than one second else the ctrl modifier is
		# reinitialized to XK_Control_L XK_Control_R as soon as keycode 48 is pressed!
	`xmodmap -e "add control = Control_L Control_R"`

	echo "Space2Ctrl is now active (logfile: $logfile)"
	exit 0
}

stop() {
	setxkbmap pl dvp # Reset xmodmap settings.. kind of a hack :3

	if pgrep -x s2c
	then
		kill -s TERM `pgrep -x s2c` 2>&1
	fi
}

restart() {
	stop
	sleep 1 # sanity
	start
}

case $1 in
	start)
		echo "Starting Space2Ctrl..."
		start;;
	stop)
		echo "Stopping Space2Ctrl..."
		stop;;
	restart)
		echo "Restarting Space2Ctrl..."
		restart;;
	*)
		echo "Please pass start or stop";;
esac
